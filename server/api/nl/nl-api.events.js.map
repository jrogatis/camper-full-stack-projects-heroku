{"version":3,"sources":["api/nl/nl-api.events.js"],"names":["NlEvents","setMaxListeners","events","save","remove","e","event","schema","post","emitEvent","doc","emit","_id"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;AACA;;;;;;AACA,IAAIA,WAAW,0BAAf;;AAEA;AACAA,SAASC,eAAT,CAAyB,CAAzB;;AAEA;AACA,IAAIC,SAAS;AACXC,QAAM,MADK;AAEXC,UAAQ;AAFG,CAAb;;AAKA;AACA,KAAI,IAAIC,CAAR,IAAaH,MAAb,EAAqB;AACnB,MAAII,QAAQJ,OAAOG,CAAP,CAAZ;AACA,kBAAGE,MAAH,CAAUC,IAAV,CAAeH,CAAf,EAAkBI,UAAUH,KAAV,CAAlB;AACD;;AAED,SAASG,SAAT,CAAmBH,KAAnB,EAA0B;AACxB,SAAO,UAASI,GAAT,EAAc;AACnBV,aAASW,IAAT,CAAiBL,KAAjB,UAA2BI,IAAIE,GAA/B,EAAsCF,GAAtC;AACAV,aAASW,IAAT,CAAcL,KAAd,EAAqBI,GAArB;AACD,GAHD;AAID;;kBAEcV,Q","file":"nl-api.events.js","sourcesContent":["/**\n * Thing model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nimport Nl from './nl-api.model';\nvar NlEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nNlEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  save: 'save',\n  remove: 'remove'\n};\n\n// Register the event emitter to the model events\nfor(var e in events) {\n  let event = events[e];\n  Nl.schema.post(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    NlEvents.emit(`${event}: ${doc._id}`, doc);\n    NlEvents.emit(event, doc);\n  };\n}\n\nexport default NlEvents;\n"]}