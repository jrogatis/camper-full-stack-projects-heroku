{"version":3,"sources":["api/stocks/stocks-api.controller.js"],"names":["index","showQuotes","show","create","upsert","patch","destroy","dateFormats","camelize","text","slugify","s","toFloat","value","valueForNaN","result","parseFloat","isNaN","isUndefined","toInt","parseInt","transformHistorical","symbol","data","headings","shift","reverse","map","line","forEach","heading","i","includes","parseCSV","trim","split","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","values","body","url","from","to","qsa","a","format","b","c","d","e","f","g","ignore","uri","qs","ret","findOne","ID","params","id","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators","findById"],"mappings":"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","file":"stocks-api.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/stocks              ->  index\n * POST     /api/stocks/quotes       ->  showQuotes\n * POST    /api/stocks              ->  create\n * GET     /api/stocks/:id          ->  show\n * PUT     /api/stocks/:id          ->  upsert\n * PATCH   /api/stocks/:id          ->  patch\n * DELETE  /api/stocks/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Stocks from './stocks-api.model';\nimport _ from 'lodash';\nimport rp from 'request-promise';\nimport moment from 'moment';\nimport S from 'string';\nconst dateFormats = ['YYYY-MM-DD', 'MM/DD/YYYY'];\n\n\nfunction camelize(text) {\n  return S(text)\n    .slugify()\n    .camelize()\n    .s;\n}\n\nfunction toFloat(value, valueForNaN) {\n  var result = parseFloat(value);\n  if(isNaN(result)) {\n    if(_.isUndefined(valueForNaN)) {\n      return null;\n    } else {\n      return valueForNaN;\n    }\n  } else {\n    return result;\n  }\n}\n\nfunction toInt(value, valueForNaN) {\n  var result = parseInt(value, 10);\n  if(isNaN(result)) {\n    if(_.isUndefined(valueForNaN)) {\n      return null;\n    } else {\n      return valueForNaN;\n    }\n  } else {\n    return result;\n  }\n}\n\nfunction transformHistorical(symbol, data) {\n  var headings = data.shift();\n  return _(data)\n    .reverse()\n    .map(function(line) {\n      var result = {};\n      headings.forEach(function(heading, i) {\n        var value = line[i];\n        if(_.includes(['Volume'], heading)) {\n          value = toInt(value, null);\n        } else if (_.includes(['Open', 'High', 'Low', 'Close', 'Adj Close', 'Dividends'], heading)) {\n          value = toFloat(value, null);\n        } else if(_.includes(['Date'], heading)) {\n          value = value\n        }\n        result[camelize(heading)] = value;\n      });\n      result.symbol = symbol;\n      return result;\n    })\n    .value();\n}\n\nfunction parseCSV(text) {\n  return S(text).trim().s.split('\\n').map(function (line) {\n    return S(line).trim().parseCSV();\n  });\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return entity => {\n    //console.log('no respond', entity);\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(function() {\n          return res.status(204).end();\n        });\n    }};\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of stocks\nexport function index(req, res) {\n  return Stocks.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function showQuotes(req, res) {\n  let values = req.body;\n  const url = 'http://chart.finance.yahoo.com/table.csv?s=';\n  values.from = moment(values.from);\n  values.to = moment(values.to);\n  const qsa = {\n    s: values.symbol,\n    a: values.from.format('MM') - 1,\n    b: values.from.format('DD'),\n    c: values.from.format('YYYY'),\n    d: values.to.format('MM') - 1,\n    e: values.to.format('DD'),\n    f: values.to.format('YYYY'),\n    g: 'd',\n    ignore: '.csv'\n  };\n\n  rp({uri: url, qs: qsa})\n    .then (ret => parseCSV(ret))\n    .then(data => transformHistorical(values.symbol, data))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n\n}\n\nexport function show(req, res) {\n  //console.log('no show', req.params.id);\n  return Stocks.findOne({\n    ID: req.params.id\n  }).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new stock Symbol in the DB\nexport function create(req, res) {\n  return Stocks.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given stock in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Stocks.findOneAndUpdate(req.params.id, req.body, {\n    upsert: true,\n    setDefaultsOnInsert: true,\n    runValidators: true\n  }).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing nl in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Stocks.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a nl from the DB\nexport function destroy(req, res) {\n  return Stocks.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n\n\n"]}