{"version":3,"sources":["api/books/books-api.controller.js"],"names":["index","showByUser","showByBook","requestBookTrade","acceptBookTrade","showAllBooks","show","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","handleTradeOffer","bookIds","offerToAdd","bookRequestedID","bookToRequestID","bookOfferID","bookToOfferID","tradeAccepted","requestToAdd","map","ent","entityIndex","booksOwned","book","_id","toString","pendingTradingRequests","push","pendingTradingOffers","handleBookOfferAceptance","aceptedOfferID","offeredEntity","selectedOffer","find","offer","findOne","exec","bookToTradeFromOfferedEntity","bookToTradeFromRequestEntity","requestEntity","pull","update","$pull","console","log","req","catch","userID","params","id","body","$or","findById","findOneAndUpdate","setDefaultsOnInsert","runValidators"],"mappings":"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","file":"api/books/books-api.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/books              ->  index\n * POST    /api/books              ->  create\n * GET     /api/books/:id          ->  show\n * PUT     /api/books/:id          ->  upsert\n * PATCH   /api/books/:id          ->  patch\n * DELETE  /api/books/:id          ->  destroy\n * GET     /api/books/user/:id     ->  showByUser\n * GET     /api/books/book/:id     ->  showByBook\n * POST    /api/books/bookTrade/:IdOfferBook/:idRequestBook  ->  doBookTrade\n * POST    /api/books/acceptBookTrade/:IdOffer ->  acceptBookTrade\n * GET     /api/books/allBooks/:id    ->  showAllBooks\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Books from './books-api.model';\nimport _ from 'lodash';\nimport mongoose from 'mongoose';\n//import ObjectId from 'mongoose';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return entity => {\n    //console.log('no respond', entity);\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(function() {\n          return res.status(204).end();\n        });\n    }};\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nfunction handleTradeOffer(bookIds) {\n  // console.log('bookIds', bookIds);\n  return function(entity) {\n    //console.log('entity', JSON.stringify(entity));\n    // a litle meesie but you set a offer on the request book owner\n    // and vice versa\n    const offerToAdd = {\n      bookRequestedID: bookIds.bookToRequestID,\n      bookOfferID: bookIds.bookToOfferID,\n      tradeAccepted: ''\n    };\n    const requestToAdd = {\n      bookRequestedID: bookIds.bookToRequestID,\n      bookOfferID: bookIds.bookToOfferID,\n      tradeAccepted: ''\n    };\n\n\n    //now i need to know what of this 2 entities have the book\n    // is the onwer of the transaction so he recive the request register\n    entity.map((ent, entityIndex) => {\n      ent.booksOwned.map(book => {\n        if(book._id.toString() === bookIds.bookToOfferID) {\n          entity[entityIndex].pendingTradingRequests.push(requestToAdd);\n          entity[entityIndex].save();\n        } else if(book._id.toString() === bookIds.bookToRequestID) {\n          entity[entityIndex].pendingTradingOffers.push(offerToAdd);\n          entity[entityIndex].save();\n        }\n      });\n    });\n\n    return entity;\n  };\n}\n\nfunction handleBookOfferAceptance(aceptedOfferID) {\n  return function(offeredEntity) {\n    const selectedOffer = _.find(offeredEntity.pendingTradingOffers, offer => {\n      return offer._id.toString() === aceptedOfferID.pendingTradingOffers;\n    });\n\n    Books.findOne({\n      'booksOwned._id': selectedOffer.bookOfferID\n    }).exec()\n      .then(requestEntity => {\n        const bookToTradeFromOfferedEntity = _.find(offeredEntity.booksOwned, book => book._id.toString() === selectedOffer.bookRequestedID);\n        const bookToTradeFromRequestEntity = _.find(requestEntity.booksOwned, book => book._id.toString() === selectedOffer.bookOfferID);\n\n        /////// ALL THE OFFERS AND REQUESTS THAT HAVE THAT BOOK NEED TO BE DELETED!!!\n        offeredEntity.booksOwned.pull({\n          _id: selectedOffer.bookRequestedID\n        });\n        offeredEntity.booksOwned.push(bookToTradeFromRequestEntity);\n        offeredEntity.save();\n\n        Books.update({\n          _id: offeredEntity._id\n        }, {\n          $pull: {\n            pendingTradingOffers: {\n              bookRequestedID: selectedOffer.bookRequestedID\n            }\n          },\n        }, err => console.log('err', err));\n\n        Books.update({\n          _id: offeredEntity._id\n        }, {\n          $pull: {\n            pendingTradingRequests: {\n              bookOfferID: selectedOffer.bookOfferID\n            }\n          },\n        }, err => console.log('err', err));\n\n        requestEntity.booksOwned.pull({\n          _id: selectedOffer.bookOfferID\n        });\n        requestEntity.booksOwned.push(bookToTradeFromOfferedEntity);\n        requestEntity.save();\n        Books.update({\n          _id: requestEntity._id\n        }, {\n          $pull: {\n            pendingTradingOffers: {\n              bookRequestedID: selectedOffer.bookRequestedID\n            }\n          },\n        }, err => console.log('err', err));\n        Books.update({\n          _id: requestEntity._id\n        }, {\n          $pull: {\n            pendingTradingRequests: {\n              bookOfferID: selectedOffer.bookOfferID\n            }\n          },\n        }, err => console.log('err', err));\n      });\n  };\n}\n\n// Gets a list of Books\nexport function index(req, res) {\n  return Books.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function showByUser(req, res) {\n  //console.log('no show', req.params.id);\n  return Books.findOne({\n    userID: req.params.id\n  }).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function showByBook(req, res) {\n  return Books.findOne({\n    'booksOwned._id': req.params.id\n  }, 'userID booksOwned.title booksOwned.imgUrl booksOwned._id').exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function requestBookTrade(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  //find the user that is offering that book\n  //console.log(req.body);\n  return Books.find({\n    $or: [{\n      'booksOwned._id': req.body.bookToOfferID\n    }, {\n      'booksOwned._id': req.body.bookToRequestID\n    }]\n  }).exec()\n  .then(handleEntityNotFound(res))\n  .then(handleTradeOffer(req.body))\n  .then(respondWithResult(res))\n  .catch(handleError(res));\n}\n\nexport function acceptBookTrade(req, res) {\n  //console.log('acceptBookTrade', req.body)\n  return Books.findOne({\n    'pendingTradingOffers._id': req.body.pendingTradingOffers\n  }).exec()\n  .then(handleEntityNotFound(res))\n  .then(handleBookOfferAceptance(req.body))\n  .then(respondWithResult(res))\n  .catch(handleError(res));\n}\n\nexport function showAllBooks(req, res) {\n  return Books.find({}, 'userID booksOwned')\n  .exec()\n  .then(handleEntityNotFound(res))\n  .then(respondWithResult(res))\n  .catch(handleError(res));\n}\n\nexport function show(req, res) {\n  return Books.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new book in the DB\nexport function create(req, res) {\n  return Books.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given book in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Books.findOneAndUpdate({_id: req.params.id }, req.body, {\n    upsert: true,\n    setDefaultsOnInsert: true,\n    runValidators: true\n  }).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing book in the DB\nexport function patch(req, res) {\n  console.log('no patch');\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Books.findOne({userID: req.params.id}).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a book from the DB\nexport function destroy(req, res) {\n  return Books.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n\n\n"],"sourceRoot":"/source/"}