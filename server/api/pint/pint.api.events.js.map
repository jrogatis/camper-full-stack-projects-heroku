{"version":3,"sources":["api/pint/pint.api.events.js"],"names":["PintEvents","setMaxListeners","events","save","remove","e","event","schema","post","emitEvent","doc","emit","_id"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;AACA;;;;;;AACA,IAAIA,aAAa,0BAAjB;;AAEA;AACAA,WAAWC,eAAX,CAA2B,CAA3B;;AAEA;AACA,IAAIC,SAAS;AACXC,QAAM,MADK;AAEXC,UAAQ;AAFG,CAAb;;AAKA;AACA,KAAI,IAAIC,CAAR,IAAaH,MAAb,EAAqB;AACnB,MAAII,QAAQJ,OAAOG,CAAP,CAAZ;AACA,oBAAKE,MAAL,CAAYC,IAAZ,CAAiBH,CAAjB,EAAoBI,UAAUH,KAAV,CAApB;AACD;;AAED,SAASG,SAAT,CAAmBH,KAAnB,EAA0B;AACxB,SAAO,UAASI,GAAT,EAAc;AACnBV,eAAWW,IAAX,CAAmBL,KAAnB,UAA6BI,IAAIE,GAAjC,EAAwCF,GAAxC;AACAV,eAAWW,IAAX,CAAgBL,KAAhB,EAAuBI,GAAvB;AACD,GAHD;AAID;;kBAEcV,U","file":"pint.api.events.js","sourcesContent":["/**\n * Pint model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nimport Pint from './pint.api.model';\nvar PintEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nPintEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  save: 'save',\n  remove: 'remove'\n};\n\n// Register the event emitter to the model events\nfor(var e in events) {\n  let event = events[e];\n  Pint.schema.post(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    PintEvents.emit(`${event}: ${doc._id}`, doc);\n    PintEvents.emit(event, doc);\n  };\n}\n\nexport default PintEvents;\n"]}